// <auto-generated />
using System;
using EducationalGames.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EducationalGames.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250413161052_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("EducationalGames.Models.Argomento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Argomento");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NomeArgomento");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("ARGOMENTI");
                });

            modelBuilder.Entity("EducationalGames.Models.ClasseGioco", b =>
                {
                    b.Property<int>("ClasseId")
                        .HasColumnType("int")
                        .HasColumnName("ID_Classe");

                    b.Property<int>("GiocoId")
                        .HasColumnType("int")
                        .HasColumnName("ID_Gioco");

                    b.HasKey("ClasseId", "GiocoId");

                    b.HasIndex("GiocoId");

                    b.ToTable("CLASSI_GIOCHI", (string)null);
                });

            modelBuilder.Entity("EducationalGames.Models.ClasseVirtuale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Classe");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodiceIscrizione")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CodiceIscrizione");

                    b.Property<int>("DocenteId")
                        .HasColumnType("int")
                        .HasColumnName("ID_Docente");

                    b.Property<int>("MateriaId")
                        .HasColumnType("int")
                        .HasColumnName("ID_Materia");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NomeClasse");

                    b.HasKey("Id");

                    b.HasIndex("CodiceIscrizione")
                        .IsUnique();

                    b.HasIndex("MateriaId");

                    b.HasIndex("DocenteId", "Nome")
                        .IsUnique();

                    b.ToTable("CLASSI_VIRTUALI");
                });

            modelBuilder.Entity("EducationalGames.Models.GiocoArgomento", b =>
                {
                    b.Property<int>("GiocoId")
                        .HasColumnType("int")
                        .HasColumnName("ID_Gioco");

                    b.Property<int>("ArgomentoId")
                        .HasColumnType("int")
                        .HasColumnName("ID_Argomento");

                    b.HasKey("GiocoId", "ArgomentoId");

                    b.HasIndex("ArgomentoId");

                    b.ToTable("GIOCHI_ARGOMENTI", (string)null);
                });

            modelBuilder.Entity("EducationalGames.Models.Iscrizione", b =>
                {
                    b.Property<int>("StudenteId")
                        .HasColumnType("int")
                        .HasColumnName("ID_Studente");

                    b.Property<int>("ClasseId")
                        .HasColumnType("int")
                        .HasColumnName("ID_Classe");

                    b.Property<DateTime>("DataIscrizione")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DataIscrizione")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("StudenteId", "ClasseId");

                    b.HasIndex("ClasseId");

                    b.ToTable("ISCRIZIONI", (string)null);
                });

            modelBuilder.Entity("EducationalGames.Models.Materia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Materia");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NomeMateria");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("MATERIE");
                });

            modelBuilder.Entity("EducationalGames.Models.ProgressoStudente", b =>
                {
                    b.Property<int>("StudenteId")
                        .HasColumnType("int")
                        .HasColumnName("ID_Studente");

                    b.Property<int>("GiocoId")
                        .HasColumnType("int")
                        .HasColumnName("ID_Gioco");

                    b.Property<int>("ClasseId")
                        .HasColumnType("int")
                        .HasColumnName("ID_Classe");

                    b.Property<uint>("MoneteRaccolte")
                        .HasColumnType("int unsigned")
                        .HasColumnName("MoneteRaccolte");

                    b.Property<DateTime>("UltimoAggiornamento")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("UltimoAggiornamento")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UltimoAggiornamento"));

                    b.HasKey("StudenteId", "GiocoId", "ClasseId");

                    b.HasIndex("ClasseId");

                    b.HasIndex("GiocoId");

                    b.ToTable("PROGRESSI_STUDENTI");
                });

            modelBuilder.Entity("EducationalGames.Models.Utente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Utente");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PasswordHash");

                    b.Property<string>("Ruolo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Ruolo");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("UTENTI");
                });

            modelBuilder.Entity("EducationalGames.Models.Videogioco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Gioco");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DefinizioneGioco")
                        .HasColumnType("json")
                        .HasColumnName("DefinizioneGioco");

                    b.Property<string>("DescrizioneBreve")
                        .HasMaxLength(160)
                        .HasColumnType("varchar(160)");

                    b.Property<string>("DescrizioneEstesa")
                        .HasColumnType("TEXT");

                    b.Property<string>("Immagine1")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Immagine2")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Immagine3")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<uint>("MaxMonete")
                        .HasColumnType("int unsigned")
                        .HasColumnName("MaxMonete");

                    b.Property<string>("Titolo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Titolo")
                        .IsUnique();

                    b.ToTable("VIDEOGIOCHI");
                });

            modelBuilder.Entity("EducationalGames.Models.ClasseGioco", b =>
                {
                    b.HasOne("EducationalGames.Models.ClasseVirtuale", "Classe")
                        .WithMany("ClassiGiochi")
                        .HasForeignKey("ClasseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EducationalGames.Models.Videogioco", "Gioco")
                        .WithMany("ClassiGiochi")
                        .HasForeignKey("GiocoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classe");

                    b.Navigation("Gioco");
                });

            modelBuilder.Entity("EducationalGames.Models.ClasseVirtuale", b =>
                {
                    b.HasOne("EducationalGames.Models.Utente", "Docente")
                        .WithMany("ClassiCreate")
                        .HasForeignKey("DocenteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EducationalGames.Models.Materia", "Materia")
                        .WithMany("ClassiVirtuali")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Docente");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("EducationalGames.Models.GiocoArgomento", b =>
                {
                    b.HasOne("EducationalGames.Models.Argomento", "Argomento")
                        .WithMany("GiochiArgomenti")
                        .HasForeignKey("ArgomentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EducationalGames.Models.Videogioco", "Gioco")
                        .WithMany("GiochiArgomenti")
                        .HasForeignKey("GiocoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Argomento");

                    b.Navigation("Gioco");
                });

            modelBuilder.Entity("EducationalGames.Models.Iscrizione", b =>
                {
                    b.HasOne("EducationalGames.Models.ClasseVirtuale", "Classe")
                        .WithMany("Iscrizioni")
                        .HasForeignKey("ClasseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EducationalGames.Models.Utente", "Studente")
                        .WithMany("Iscrizioni")
                        .HasForeignKey("StudenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classe");

                    b.Navigation("Studente");
                });

            modelBuilder.Entity("EducationalGames.Models.ProgressoStudente", b =>
                {
                    b.HasOne("EducationalGames.Models.ClasseVirtuale", "Classe")
                        .WithMany("Progressi")
                        .HasForeignKey("ClasseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EducationalGames.Models.Videogioco", "Gioco")
                        .WithMany("Progressi")
                        .HasForeignKey("GiocoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EducationalGames.Models.Utente", "Studente")
                        .WithMany("Progressi")
                        .HasForeignKey("StudenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classe");

                    b.Navigation("Gioco");

                    b.Navigation("Studente");
                });

            modelBuilder.Entity("EducationalGames.Models.Argomento", b =>
                {
                    b.Navigation("GiochiArgomenti");
                });

            modelBuilder.Entity("EducationalGames.Models.ClasseVirtuale", b =>
                {
                    b.Navigation("ClassiGiochi");

                    b.Navigation("Iscrizioni");

                    b.Navigation("Progressi");
                });

            modelBuilder.Entity("EducationalGames.Models.Materia", b =>
                {
                    b.Navigation("ClassiVirtuali");
                });

            modelBuilder.Entity("EducationalGames.Models.Utente", b =>
                {
                    b.Navigation("ClassiCreate");

                    b.Navigation("Iscrizioni");

                    b.Navigation("Progressi");
                });

            modelBuilder.Entity("EducationalGames.Models.Videogioco", b =>
                {
                    b.Navigation("ClassiGiochi");

                    b.Navigation("GiochiArgomenti");

                    b.Navigation("Progressi");
                });
#pragma warning restore 612, 618
        }
    }
}
