# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP.NET Core service.

services: # Database MariaDB
  mariadb:
    image: mariadb:11.4
    container_name: mariadb
    restart: unless-stopped # Riavvia il container a meno che non sia stato fermato esplicitamente
    ports:
      # Mappa la porta host (da .env, default 3306) alla porta interna del container (3306)
      # Utile per connettersi al DB da strumenti sull'host (es. DBeaver, MySQL Workbench).
      - "${MARIADB_HOST_PORT:-3306}:3306"
    environment:
      # Le password e i nomi sono presi dal file .env
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      MARIADB_USER: ${MARIADB_USER_NAME}
      MARIADB_PASSWORD: ${MARIADB_USER_PASSWORD}
    volumes:
      - mariadb_data:/var/lib/mysql # Volume per la persistenza dei dati di MariaDB
    networks:
      - educationalgames_network
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 60s # Tempo di attesa iniziale prima del primo controllo di salute

  # WebApp "EducationalGames" (definita per poter effettuare scaling)
  webapp:
    image: webapp:latest # Assicurarsi che questa immagine sia costruita correttamente
    build:
      context: ./EducationalGames/EducationalGames # Assumendo che docker-compose.yml sia nella root del progetto e il progetto EducationalGames sia una sotto-cartella /EducationalGames/EducationalGames
      dockerfile: Dockerfile # Specifica il percorso del Dockerfile
    restart: unless-stopped
    depends_on:
      mariadb:
        condition: service_healthy # Attende che MariaDB sia healthy
      otel-collector: # Aggiunta dipendenza dal collector
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Production # O "Development" per debug nei container
      ASPNETCORE_URLS: http://+:${WEBAPP_CONTAINER_INTERNAL_PORT:-8080} # La porta su cui l'app ascolta DENTRO il container
      ConnectionStrings__EducationalGamesConnection: "Server=mariadb;Port=3306;Database=${MARIADB_DATABASE};Uid=root;Pwd=${MARIADB_ROOT_PASSWORD};AllowPublicKeyRetrieval=true;Pooling=true;"
      EmailSettings__SmtpServer: ${SMTP_SERVER}
      EmailSettings__Port: ${SMTP_PORT}
      EmailSettings__SenderName: ${SMTP_SENDER_NAME}
      EmailSettings__SenderEmail: ${SMTP_SENDER_EMAIL}
      EmailSettings__Username: ${SMTP_USERNAME}
      EmailSettings__Password: ${SMTP_PASSWORD}
      DefaultAdminCredentials__Nome: ${ADMIN_NAME}
      DefaultAdminCredentials__Cognome: ${ADMIN_SURNAME}
      DefaultAdminCredentials__Email: ${ADMIN_EMAIL}
      DefaultAdminCredentials__Password: ${ADMIN_PASSWORD}
      Authentication__Google__ClientId: ${GOOGLE_CLIENT_ID}
      Authentication__Google__ClientSecret: ${GOOGLE_CLIENT_SECRET}
      Authentication__Microsoft__ClientId: ${MICROSOFT_CLIENT_ID}
      Authentication__Microsoft__ClientSecret: ${MICROSOFT_CLIENT_SECRET}
      Authentication__Microsoft__TenantId: ${MICROSOFT_TENANT_ID}
      # Data Protection
      DATA_PROTECTION_KEYS_PATH: /app/shared_dp_keys
      DataProtection__AutoGenerateKeys: ${WEBAPP_DP_AUTO_GENERATE_KEYS:-true}
      DataProtection__KeyLifetime: ${WEBAPP_DP_KEY_LIFETIME:-30}
      # CORS Settings
      CorsSettings__AllowedLocalOrigins__0: ${WEBAPP_CORS_ALLOWED_ORIGINS_0:-http://localhost:8080}
      CorsSettings__AllowedLocalOrigins__1: ${WEBAPP_CORS_ALLOWED_ORIGINS_1:-https://localhost:8443}
      # Si pu√≤ aggiungere CorsSettings__AllowedLocalOrigins__2, __3, ecc. se necessario
      CorsSettings__TunnelOrProxyOrigin: ${WEBAPP_CORS_TUNNEL_OR_PROXY_ORIGIN:-} # Altre
      Testing__BypassEmailVerification: ${TESTING_BYPASS_EMAIL_VERIFICATION:-false}
      # VARIABILI PER OPENTELEMETRY
      OTEL_EXPORTER_OTLP_PROTOCOL: ${OTEL_EXPORTER_OTLP_PROTOCOL:-grpc}
      OTEL_EXPORTER_OTLP_ENDPOINT: ${OTEL_EXPORTER_OTLP_ENDPOINT:-http://otel-collector:4317}
      OTEL_SERVICE_NAME: ${OTEL_SERVICE_NAME:-EducationalGames}
      OTEL_SERVICE_VERSION: ${OTEL_SERVICE_VERSION:-1.0.0}
      OTEL_RESOURCE_ATTRIBUTES: ${OTEL_RESOURCE_ATTRIBUTES:-service.name=EducationalGames,service.version=1.0.0,deployment.environment=docker,service.namespace=educationalgames}
      OTEL_METRIC_EXPORT_INTERVAL: ${OTEL_METRIC_EXPORT_INTERVAL:-5000}
      OTEL_TRACES_EXPORTER: ${OTEL_TRACES_EXPORTER:-otlp}
      OTEL_METRICS_EXPORTER: ${OTEL_METRICS_EXPORTER:-otlp,prometheus}
      OTEL_LOGS_EXPORTER: ${OTEL_LOGS_EXPORTER:-otlp}
      # Configurazione batch per ottimizzare le performance
      OTEL_BSP_SCHEDULE_DELAY: ${OTEL_BSP_SCHEDULE_DELAY:-5000}
      OTEL_BSP_EXPORT_TIMEOUT: ${OTEL_BSP_EXPORT_TIMEOUT:-30000}
      OTEL_BSP_MAX_EXPORT_BATCH_SIZE: ${OTEL_BSP_MAX_EXPORT_BATCH_SIZE:-512}
      OTEL_BSP_MAX_QUEUE_SIZE: ${OTEL_BSP_MAX_QUEUE_SIZE:-2048}
    volumes:
      - dp_keys_volume:/app/shared_dp_keys # Volume condiviso per le Data Protection Keys
    networks:
      - educationalgames_network

  # Nginx come Reverse Proxy e Load Balancer e terminatore HTTPS
  # Utilizza un template per la configurazione dinamica
  # Assicurarsi che il file educationalgames.template.conf sia presente nella cartella nginx/conf.d
  nginx:
    image: nginx:1.27.5
    container_name: nginx
    restart: unless-stopped
    ports:
      - "${NGINX_HTTP_HOST_PORT:-8080}:80"
      - "${NGINX_HTTPS_HOST_PORT:-8443}:443"
    volumes:
      - ./nginx/conf.d/educationalgames.template.conf:/etc/nginx/templates/educationalgames.template.conf:ro
      - ./nginx/ssl/dev-certs:/etc/nginx/ssl/dev-certs:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    environment:
      # Variabili per il template Nginx
      - NGINX_SERVER_NAME=${NGINX_SERVER_NAME:-localhost}
      - NGINX_HTTPS_HOST_PORT=${NGINX_HTTPS_HOST_PORT:-8443}
      - WEBAPP_CONTAINER_INTERNAL_PORT=${WEBAPP_CONTAINER_INTERNAL_PORT:-8080}
    command:
      - /bin/sh
      - -c
      - |
        set -e
        echo "Removing default nginx configuration..."
        rm -f /etc/nginx/conf.d/default.conf
        echo "Processing Nginx configuration template..."
        echo "NGINX_SERVER_NAME: $NGINX_SERVER_NAME"
        echo "NGINX_HTTPS_HOST_PORT: $NGINX_HTTPS_HOST_PORT"
        echo "WEBAPP_CONTAINER_INTERNAL_PORT: $WEBAPP_CONTAINER_INTERNAL_PORT"
        envsubst '$$NGINX_SERVER_NAME $$NGINX_HTTPS_HOST_PORT $$WEBAPP_CONTAINER_INTERNAL_PORT' \
          < /etc/nginx/templates/educationalgames.template.conf \
          > /etc/nginx/conf.d/educationalgames.conf
        echo "Generated nginx configuration:"
        cat /etc/nginx/conf.d/educationalgames.conf
        echo "Listing configuration files:"
        ls -la /etc/nginx/conf.d/
        echo "Testing nginx configuration..."
        nginx -t
        echo "Starting Nginx..."
        nginx -g 'daemon off;'
    networks:
      - educationalgames_network
    depends_on:
      - webapp

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=15d"
      - "--storage.tsdb.retention.size=10GB"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    networks:
      - educationalgames_network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - educationalgames_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - educationalgames_network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/:/rootfs:ro"
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--path.rootfs=/rootfs"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    networks:
      - educationalgames_network

  # OTel Collector Configuration Processor
  otel-config-processor:
    image: alpine:latest
    container_name: otel-config-processor
    volumes:
      - ./otel-collector-config.template.yml:/templates/config.template.yml:ro
      - otel_config_volume:/output
    environment:
      - OTEL_TAIL_SAMPLING_LATENCY_THRESHOLD_MS=${OTEL_TAIL_SAMPLING_LATENCY_THRESHOLD_MS:-500}
      - OTEL_TAIL_SAMPLING_PROBABILISTIC_PERCENT=${OTEL_TAIL_SAMPLING_PROBABILISTIC_PERCENT:-10}
    command:
      - /bin/sh
      - -c
      - |
        set -e
        echo "Processing OpenTelemetry Collector configuration template..."
        echo "OTEL_TAIL_SAMPLING_LATENCY_THRESHOLD_MS: $OTEL_TAIL_SAMPLING_LATENCY_THRESHOLD_MS"
        echo "OTEL_TAIL_SAMPLING_PROBABILISTIC_PERCENT: $OTEL_TAIL_SAMPLING_PROBABILISTIC_PERCENT"

        # Installa gettext per envsubst
        apk add --no-cache gettext

        envsubst '$$OTEL_TAIL_SAMPLING_LATENCY_THRESHOLD_MS $$OTEL_TAIL_SAMPLING_PROBABILISTIC_PERCENT' \
          < /templates/config.template.yml \
          > /output/config.yml
        echo "Generated OpenTelemetry Collector configuration:"
        cat /output/config.yml
        echo "Configuration processing completed."

  # OTel Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.128.0
    container_name: otel-collector
    restart: unless-stopped
    command: ["--config=/etc/otelcol-contrib/config.yml"]
    volumes:
      - otel_config_volume:/etc/otelcol-contrib:ro
    ports:
      - "4319:4317" # OTLP gRPC (mapped to avoid conflict with Jaeger)
      - "4320:4318" # OTLP HTTP (mapped to avoid conflict with Jaeger)
      - "8889:8889" # Prometheus metrics exporter
      - "8888:8888" # OTel Collector metrics
    environment:
      # Configurazione memoria per il collector
      GOMEMLIMIT: ${OTEL_COLLECTOR_MEMORY_LIMIT:-512MiB}
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    depends_on:
      otel-config-processor:
        condition: service_completed_successfully
      jaeger:
        condition: service_started
    networks:
      - educationalgames_network
  jaeger:
    image: jaegertracing/jaeger:2.7.0
    container_name: jaeger
    restart: unless-stopped
    ports:
      - "16686:16686" # Jaeger UI
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP HTTP receiver
    volumes:
      - ./jaeger/jaeger-config.yaml:/jaeger/config.yaml:ro
    command: ["--config", "/jaeger/config.yaml"]
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    networks:
      - educationalgames_network
  # Loki per la gestione dei log
  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./loki/config.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - educationalgames_network

  # Promtail per raccogliere i log dai container
  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    restart: unless-stopped
    volumes:
      - ./promtail/config.yml:/etc/promtail/docker-config.yaml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      - loki
    networks:
      - educationalgames_network

volumes:
  mariadb_data: # Volume per i dati di MariaDB
  dp_keys_volume: # Volume condiviso per le Data Protection Keys
  prometheus_data: # Volume per i dati di Prometheus
  grafana_data: # Volume per i dati di Grafana
  otel_config_volume: # Volume per la configurazione processata di OpenTelemetry
  loki_data: # Volume per i dati di Loki
networks:
  educationalgames_network:
    driver: bridge
