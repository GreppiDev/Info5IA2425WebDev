# Template Script di configurazione di Nginx per la web app EducationalGames

# Definisce l'upstream per le istanze della webapp
upstream educationalgames_backend {

    # 1. IP Hash (Affinit√† di Sessione basata su IP)
    # Garantisce che le richieste da uno stesso client vadano sempre alla stessa istanza.
    # Utile per applicazioni stateful o per migliorare le performance della cache locale.
    #ip_hash;

    # 2. Least Connections
    # Invia le richieste all'istanza con il minor numero di connessioni attive.
    # Ottimo per distribuire il carico in modo efficiente.
    least_conn;

    # 3. Round Robin (Default)
    # Se non si specifica alcuna direttiva, Nginx usa il Round Robin,
    # inviando le richieste alle istanze in sequenza.
    
    # Usa la variabile per la porta interna della webapp
    server webapp:${WEBAPP_CONTAINER_INTERNAL_PORT};
}

# Server HTTP: reindirizza tutto a HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name ${NGINX_SERVER_NAME};

    location / {
        return 301 https://${NGINX_SERVER_NAME}:${NGINX_HTTPS_HOST_PORT}$request_uri;
    }
}

# Server HTTPS (con certificati di sviluppo)
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name ${NGINX_SERVER_NAME};

    # Assicurarsi che i nomi dei certificati siano corretti o usa NGINX_SERVER_NAME
    ssl_certificate /etc/nginx/ssl/dev-certs/${NGINX_SERVER_NAME}.crt;
    ssl_certificate_key /etc/nginx/ssl/dev-certs/${NGINX_SERVER_NAME}.key;

    # Impostazioni SSL consigliate (puoi personalizzarle)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # Header di sicurezza (opzionali ma consigliati)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    # add_header X-Frame-Options DENY always;
    # add_header X-Content-Type-Options nosniff always;
    # add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self';" always;
    # add_header Permissions-Policy "geolocation=(),midi=(),sync-xhr=(),microphone=(),camera=(),magnetometer=(),gyroscope=(),fullscreen=(self),payment=()" always;    # Restrizioni per endpoint di telemetria - solo reti locali/conosciute
    location ~ ^/(metrics|health)$|^/api/telemetry/ {
        allow 127.0.0.1; # localhost
        allow ::1; # localhost IPv6
        allow 10.0.0.0/8; # Rete privata classe A
        allow 172.16.0.0/12; # Rete privata classe B - Include Docker
        allow 192.168.0.0/16; # Rete privata classe C
        deny all; # Blocca tutto il resto
        
        # Proxy pass per gli endpoint di telemetria
        proxy_pass http://educationalgames_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_http_version 1.1;
    }

    location / {
        proxy_pass http://educationalgames_backend;
        proxy_set_header Host $host; # L'host originale richiesto dal client
        proxy_set_header X-Real-IP $remote_addr; # L'IP reale del client
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Lista degli IP (client, eventuali proxy)
        proxy_set_header X-Forwarded-Proto $scheme; # Lo schema originale (http o https)
        proxy_set_header X-Forwarded-Host $http_host; # L'host originale inclusa la porta, se specificata dal client

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 86400s; # Timeout per connessioni lunghe (es. SignalR)
        proxy_send_timeout 86400s;
    }


    # Esempio per servire file statici direttamente da Nginx (se necessario)
    # location /static/ {
    #     alias /var/www/static/;
    #     expires 1d;
    #     access_log off;
    # }

}